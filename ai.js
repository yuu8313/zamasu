const a={"です|ます":"ザマス","でした|ました":"ザマシタ",ください:"クダサイザマス",おはよう:"オハヨウザマス",こんにちは:"コンニチワザマス",こんばんは:"コンバンワザマス",さようなら:"サヨウナラザマス",ありがとう:"アリガトウザマス",すみません:"スミマセンザマス"},u={わたくし:"ワタクシ",あなた:"アナタ",これ:"コレ",それ:"ソレ",あれ:"アレ",ここ:"ココ",そこ:"ソコ","ありがとうございます|ありがとう|サンキュー|ｱﾘｶﾞｯﾄｳ":"あザマス",あそこ:"アソコ"},m=i=>{const c=[];let r=i.replace(/"([^"]+)"/g,(n,e)=>(c.push(e),`__QUOTE${c.length-1}__`)).replace(/\{([^}]+)\}/g,(n,e)=>`{${e}ザマス}`);for(const[n,e]of Object.entries(u))n.split("|").forEach(t=>{const s=new RegExp(`${t}`,"g");r=r.replace(s,e)});for(const[n,e]of Object.entries(a))n.split("|").forEach(t=>{const s=new RegExp(`${t}(?=。)`,"g");r=r.replace(s,e)});return r=r.replace(/__QUOTE(\d+)__/g,(n,e)=>`"${c[parseInt(e)]}"`),r=r.replace(/[{}]/g,""),r=r.split(new RegExp("(?<=。)")).map(n=>{if(!n.trim())return n;const e=n.split(" ");return e.map((t,s)=>t.trim()?s===e.length-1?t.trim().endsWith("ザマス。")?t:t.trim().endsWith("ザマス")?t+"。":t.trim()+"ザマス。":t.trim().endsWith("ザマス")?t:t.trim()+"ザマス":t).join(" ")}).join(""),r};export{m as c};
